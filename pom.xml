<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
  	<artifactId>messaging.web</artifactId>
  	<version>1.0</version>
  	<packaging>war</packaging>
  	<name>messaging</name>
  	<description>messaging Serveur</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.resources.sourceEncoding>UTF-8</project.resources.sourceEncoding>
	</properties>

	<repositories>
		<repository>
			<id>jboss.org</id>
			<name>The JBoss maven repo</name>
			<url>http://repository.jboss.com/maven2</url>
		</repository>
		<repository>
			<id>java.net</id>
			<name>The Java.net repo</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<id>jboss-snapshot</id>
			<name>The JBoss maven repo</name>
			<url>http://snapshots.jboss.org/maven2</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
			<version>3.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0.1</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.security</groupId>
			<artifactId>xml-security-impl</artifactId>
			<version>1.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa</artifactId>
			<version>2.4.0</version>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>project.properties</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			
			
			<plugin>
				
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				  <configuration>
					
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<webappDirectory>${project.build.directory}/${project.build.finalName}-patched</webappDirectory>
				</configuration>
				
				<executions>
			 	<execution>
					<id>prepare-war</id>
					<phase>prepare-package</phase>
					<goals>
						<goal>exploded</goal>
					</goals>					
					 <configuration>
				<!-- 	  <warSourceExcludes>js/**</warSourceExcludes> -->
					 <warSourceDirectory>WebContent</warSourceDirectory>
          				<webappDirectory>${project.build.directory}/${project.build.finalName}-patched/</webappDirectory>
        			</configuration>
				</execution> 
				
				<execution>
					<id>package</id>
					<phase>package</phase>
					<goals>
						<goal>war</goal>
					</goals>
					
					<configuration>					
        				<warSourceDirectory>${project.build.directory}/${project.build.finalName}-patched</warSourceDirectory>
      					<warName>${project.build.finalName}</warName>
      				</configuration>
				</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			
			<!-- 	<plugin>
        <groupId>com.samaxes.maven</groupId>
        <artifactId>minify-maven-plugin</artifactId>
        <version>1.7.5</version>
        <executions>
          <execution>
            <id>default-minify</id>
            <phase>prepare-package</phase>
            <configuration>
            	<charset>UTF-8</charset>
            	<closureAngularPass>true</closureAngularPass>
            	<webappSourceDir>${basedir}/WebContent</webappSourceDir>
     			<webappTargetDir>${project.build.directory}/${project.build.finalName}-patched</webappTargetDir>

            <jsSourceDir>js</jsSourceDir>
              
              <jsSourceFiles>
              	<jsSourceFile>mainApp.js</jsSourceFile>
              </jsSourceFiles>
              <jsSourceIncludes>            
               <jsSourceInclude>app/**/*</jsSourceInclude>   
                <jsSourceInclude>directives/**/*</jsSourceInclude> 
                 <jsSourceInclude>services/**/*</jsSourceInclude>
                <jsSourceInclude>controllers/**/*</jsSourceInclude>
              </jsSourceIncludes>
              
              
              <jsTargetDir>js/${project.version}</jsTargetDir>
                <jsFinalFile>opportunity.js</jsFinalFile>
            </configuration>
            <goals>
              <goal>minify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
			 -->
			
			
			
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://127.0.0.1:8080/manager/text</url>
					<server>TomcatServer</server>
					<path>/messaging</path>
					<warFile>${project.build.directory}/${project.build.finalName}.war</warFile>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<groupId>messaging</groupId>
</project>